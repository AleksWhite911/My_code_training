# -*- coding: utf-8 -*-

import simple_draw as sd
sd.resolution = (1200, 600)
cord_x = [[150, 500], [200, 500], [250, 500], [300, 500], [350, 500],
          [400, 500], [450, 500], [500, 500], [550, 500], [600, 500],
          [650, 500], [700, 500], [750, 500], [800, 500], [850, 500],
          [900, 500], [950, 500], [1000, 500], [1050, 500], [1100, 500]]
# На основе кода из практической части реализовать снегопад:
# - создать списки данных для отрисовки N снежинок
# - нарисовать падение этих N снежинок
# - создать список рандомных длинн лучей снежинок (от 10 до 100) и пусть все снежинки будут разные
len_snow = [10, 11, 12, 13, 14,
            15, 16, 17, 18, 33,
            12, 10, 20, 21, 14,
            13, 20, 11, 16, 12]
N = 20
v = 0
# Пригодятся функции
# sd.get_point()
# sd.snowflake()
# sd.sleep()
 #sd.random_number()
# sd.user_want_exit()

# TODO здесь ваш код
while True:
    sd.clear_screen()
    for elem in cord_x:
        point = sd.get_point(*elem)
        sd.snowflake(center=point, length=len_snow[v])
        #cord_x[v][0] = cord_x[v][0] + 10
        cord_x[v][1] = cord_x[v][1] - 10
        v += 1
        if v > (len(cord_x) - 1):
            v = 0
    sd.sleep(0.1)
    if sd.user_want_exit():
        break

sd.pause()

# подсказка! для ускорения отрисовки можно
#  - убрать clear_screen()
#  - в начале рисования всех снежинок вызвать sd.start_drawing()
#  - на старом месте снежинки отрисовать её же, но цветом sd.background_color
#  - сдвинуть снежинку
#  - отрисовать её цветом sd.COLOR_WHITE на новом месте
#  - после отрисовки всех снежинок, перед sleep(), вызвать sd.finish_drawing()


# 4) Усложненное задание (делать по желанию)
# - сделать рандомные отклонения вправо/влево при каждом шаге
# - сделать сугоб внизу экрана - если снежинка долетает до низа, оставлять её там,
#   и добавлять новую снежинку
# Результат решения см https://youtu.be/XBx0JtxHiLg


